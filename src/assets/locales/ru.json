{
  "course.title": "ReCourse",
  "course.subtitle": "ReCourse is one of the best courses",
  "course.description": "React + TypeScript course â€” your fast track to building powerful, reliable web apps. Master modern hooks, strong typing for safer code, and best development patterns. Learn hands-on how to create scalable interfaces and work with APIs. Perfect for developers ready to levelup frontend without unnecessary theory.",

  "skills.title": "Skills that you will learn",

  "skills.react.title": "React",
  "skills.react.jsx_and_props": "Build components using JSX and props",
  "skills.react.state_management": "Manage state with useState and useReducer",
  "skills.react.side_effects": "Handle side effects with useEffect",
  "skills.react.performance_optimization": "Work with refs, memoization, and performance hooks",
  "skills.react.events_and_forms": "Handle events and forms",
  "skills.react.context_api": "Use the Context API for shared state",
  "skills.react.lazy_loading": "Load components lazily with React.lazy and Suspense",
  "skills.react.api_integration": "Connect to APIs using fetch, axios",

  "skills.typescript.title": "TypeScript",
  "skills.typescript.type_annotations": "Type annotations, any, unknown, void, never",
  "skills.typescript.primitive_types": "Working with primitives, arrays, tuples, and object types",
  "skills.typescript.type_vs_interface": "The difference between type and interface, and when to use each",
  "skills.typescript.generics": "Using generics in functions, components, and custom hooks",
  "skills.typescript.type_composition": "Combining types with unions, intersections, and type guards",
  "skills.typescript.react_typing": "Typing React props, state, and events",
  "skills.typescript.configuration": "Configuring tsconfig.json for React projects",
  "skills.typescript.utility_types": "Leveraging utility types",

  "skills.architecture.title": "Architecture",
  "skills.architecture.solid_principles": "SOLID",
  "skills.architecture.clean_architecture": "Clean Architecture",
  "skills.architecture.feature_sliced_design": "FSD (Feature Sliced Design)",
  "skills.architecture.avoid_overengineering": "How to avoid overengineering",
  "skills.architecture.state_management": "Managing state effectively: state managers",
  "skills.architecture.async_state": "Working with async data: async state managers",
  "skills.architecture.testing_strategy": "Testing: unit, e2e, integration tests",
  "skills.architecture.component_decomposition": "Where and how to decompose large components",

  "button.purchase_now": "Purchase Now",
  "button.learn_more": "Learn More",

  "information.contacts": "Contacts",
  "information.language": "Language"
}
