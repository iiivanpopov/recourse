const t="Язык",e={language:t,"course.title":"ReCourse","course.subtitle":"ReCourse — один из лучших курсов","course.description":"Курс по React + TypeScript — ваш быстрый путь к созданию мощных и надёжных веб-приложений. Освойте современные хуки, строгую типизацию для безопасного кода и лучшие паттерны разработки. На практике научитесь создавать масштабируемые интерфейсы и работать с API. Идеально для разработчиков, готовых прокачать фронтенд без лишней теории.","skills.title":"Навыки, которые вы освоите","skills.react.title":"React","skills.react.jsx_and_props":"Создание компонентов с использованием JSX и props","skills.react.state_management":"Управление состоянием с помощью useState и useReducer","skills.react.side_effects":"Обработка побочных эффектов с useEffect","skills.react.performance_optimization":"Работа с refs, мемоизацией и хуками производительности","skills.react.events_and_forms":"Обработка событий и форм","skills.react.context_api":"Использование Context API для общего состояния","skills.react.lazy_loading":"Ленивая загрузка компонентов через React.lazy и Suspense","skills.react.api_integration":"Подключение к API с использованием fetch, axios","skills.typescript.title":"TypeScript","skills.typescript.type_annotations":"Аннотации типов: any, unknown, void, never","skills.typescript.primitive_types":"Работа с примитивами, массивами, кортежами и объектными типами","skills.typescript.type_vs_interface":"Разница между type и interface и когда использовать каждый","skills.typescript.generics":"Использование дженериков в функциях, компонентах и кастомных хуках","skills.typescript.type_composition":"Комбинирование типов с unions, intersections и type guards","skills.typescript.react_typing":"Типизация props, состояния и событий в React","skills.typescript.configuration":"Настройка tsconfig.json для проектов на React","skills.typescript.utility_types":"Использование утилитарных типов","skills.architecture.title":"Архитектура","skills.architecture.solid_principles":"SOLID","skills.architecture.clean_architecture":"Чистая архитектура","skills.architecture.feature_sliced_design":"FSD (Feature Sliced Design)","skills.architecture.avoid_overengineering":"Как избежать чрезмерного усложнения","skills.architecture.state_management":"Эффективное управление состоянием: менеджеры состояния","skills.architecture.async_state":"Работа с асинхронными данными: менеджеры асинхронного состояния","skills.architecture.testing_strategy":"Тестирование: unit, e2e, интеграционные тесты","skills.architecture.component_decomposition":"Где и как декомпозировать большие компоненты","plan.title":"План курса","plan.subtitle":"10 модулей · Финальный проект · 70+ уроков","button.purchase_now":"Купить сейчас","button.learn_more":"Узнать больше","plan.introduction.title":"Введение","plan.introduction.whatIsReact":"Что такое React и зачем нужен TypeScript","plan.introduction.setupEnvironment":"Настройка окружения (Vite + TypeScript)","plan.introduction.projectStructure":"Обзор структуры проекта","plan.reactFundamentals.title":"Основы React","plan.reactFundamentals.jsxAndComponents":"JSX и функциональные компоненты","plan.reactFundamentals.propsAndState":"Props и useState","plan.reactFundamentals.eventsAndForms":"Обработка событий и форм","plan.reactFundamentals.listsAndKeys":"Рендеринг списков с ключами","plan.reactFundamentals.useEffect":"Использование useEffect для побочных эффектов","plan.reactFundamentals.conditionalRendering":"Условный рендеринг","plan.hooksAndLogic.title":"Хуки и логика","plan.hooksAndLogic.performanceHooks":"useRef, useMemo, useCallback для производительности","plan.hooksAndLogic.useReducer":"useReducer для сложного состояния","plan.hooksAndLogic.contextAPI":"Context API для общего состояния","plan.hooksAndLogic.customHooks":"Создание кастомных хуков","plan.reactRouter.title":"React Router","plan.reactRouter.installation":"Установка и настройка react-router-dom","plan.reactRouter.routingBasics":"Основы маршрутизации: Route, Link, useNavigate","plan.reactRouter.dynamicAndNestedRoutes":"Динамические и вложенные маршруты","plan.reactRouter.lazyLoading":"Ленивая загрузка с React.lazy и Suspense","plan.tsEssentials.title":"Основы TypeScript","plan.tsEssentials.typeBasics":"Аннотации типов, примитивы, массивы, кортежи","plan.tsEssentials.typeVsInterface":"type vs interface","plan.tsEssentials.genericsAndUnions":"Дженерики, enum'ы, объединения и пересечения","plan.tsEssentials.typingFunctions":"Типизация функций, объектов, событий, промисов","plan.tsEssentials.tsconfig":"Настройка tsconfig.json","plan.tsInReact.title":"TypeScript в React","plan.tsInReact.typingComponents":"Типизация props, состояния и событий","plan.tsInReact.typingHooks":"Типизация кастомных хуков и редьюсеров","plan.tsInReact.typingApi":"Типизация ответов API и форм","plan.tsInReact.utilityTypes":"Утилитарные типы: Partial, Omit, Record и др.","plan.tsInReact.errorTyping":"Типизация и обработка ошибок","plan.workingWithApis.title":"Работа с API","plan.workingWithApis.fetchingData":"Получение данных через fetch и axios","plan.workingWithApis.errorAndLoading":"Состояния загрузки и ошибок","plan.workingWithApis.reactQuery":"Кэширование и мутации с помощью react-query","plan.workingWithApis.optimisticUpdates":"Оптимистичное обновление UI","plan.formsAndValidation.title":"Формы и валидация","plan.formsAndValidation.reactHookForm":"Работа с формами через react-hook-form","plan.formsAndValidation.typedFields":"Строгая типизация полей форм","plan.formsAndValidation.validation":"Валидация с использованием zod или yup","plan.architectureAndBestPractices.title":"Архитектура и лучшие практики","plan.architectureAndBestPractices.organizingFiles":"Организация файлов: UI, features, shared","plan.architectureAndBestPractices.componentResponsibility":"Разделение ответственности компонентов","plan.architectureAndBestPractices.reusableLogic":"Централизация логики: хуки, утилиты","plan.architectureAndBestPractices.codeSplitting":"Ленивая загрузка и разделение кода","plan.architectureAndBestPractices.cleanCode":"Чистый, масштабируемый и понятный код","plan.testing.title":"Тестирование","plan.testing.setup":"Настройка Jest и React Testing Library","plan.testing.renderingTests":"Рендеринг и взаимодействие в тестах","plan.testing.mockingAsync":"Мок асинхронного поведения","plan.testing.testingHooks":"Тестирование хуков и логики","newsletters.title":"Подписка на рассылку","newsletters.subtitle":"Следите за новыми курсами","input.hint.newsletters":"Наши письма будут отправлены сюда","input.label.email":"E-Mail","input.placeholder.email":"например, user@gmail.com","button.subscribe":"Подписаться","input.error.required":"Это поле обязательно для заполнения","input.error.email":"Введите корректный адрес электронной почты","input.error.generic":"Произошла ошибка, пожалуйста, попробуйте позже"};export{e as default,t as language};
